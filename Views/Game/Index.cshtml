<div id="AppVueGame" class="row mt-1">


    <div class="container row mt-5">
        <div class="col-12 text-center">
            <p class="btn btn-warning">{{countDown}}</p>
        </div>
        <div class="col-12 text-center">
            <p class="btn btn-success">{{random1}}</p>
            <p class="btn btn-success">{{random2}}</p>
            <p class="btn btn-success">{{random3}}</p>
            <p class="btn btn-success">{{random4}}</p>
        </div>
    </div>


    <div class="container">
        <table class="table table-striped" id="tableBrand">
            <thead class="bg-gradient-warning text-primary">
                <tr>
                    <th class="text-center">STT</th>
                    <th class="text-center">Phiên</th>
                    <th class="text-center">Kết quả</th>
                    <th class="text-center">Xóa</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item, index) in data" :key=index>
                    <th class="text-center">{{index+1}}</th>
                    <th class="text-center">Phiên</th>
                    <th class="text-center">Kết quả</th>
                    <th class="text-center"><span class="btn btn-danger">Xóa</span></th>
                </tr>
            </tbody>
        </table>
    </div>

</div>


<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript">


    var AppVueGame = new Vue({
        el: "#AppVueGame",
        data: {
            data: [],
            connectionHub: null,
            countDown: 60,
            random1: 0,// 1 là xuân
            random2: 0,// 2 là hạ
            random3: 0,// 3 là thu
            random4: 0,// 4 là đông
        },
        computed: {

        },
        mounted() {
            var connection = new signalR.HubConnectionBuilder().withUrl("/gameHub").build();
            connection.start().then(() => {
                console.log("Kết nối thành công")
                this.calldata();
            }).catch(function (err) {
                console.log("err: ", err)
            });
            this.connectionHub = connection;
            this.Init();
        },
        methods: {
            Init() {
                fetch("/Game/getHistory")
                    .then(res => res.json())
                then(data => this.data = data.data)
            },
            async startCountdown() {
                await this.connectionHub.invoke("CountDownUpDate", this.countDown--)
            },
            async sendata() {
                await this.connectionHub.invoke("CountDownFinish", true, false, false, true);
                this.Init();
            },
            calldata() {
                let a = setInterval(() => {
                    if (this.countDown > 0) {
                        this.startCountdown();
                    }
                    else {
                        clearInterval(a);
                        this.sendata();
                        this.countDown = 60;
                        this.calldata();
                    }
                }, 1000);
            }

        }
    });
</script>