<div id="AppVueGame" class="row mt-1">


    <div class="d-flex justify-content-evenly">
        <span class="btn border" v-bind:class="{ 'btn-success': adminconfig1 }">Admin sửa kết quả phiên hiện tại</span>
        <span class="btn border" v-bind:class="{ 'btn-success': XuanHaThuDong[0] == 1 }" v-on:click="adminconfig(1)">Xuân</span>
        <span class="btn border" v-bind:class="{ 'btn-success': XuanHaThuDong[1] == 2 }" v-on:click="adminconfig(2)">Hạ</span>
        <span class="btn border" v-bind:class="{ 'btn-success': XuanHaThuDong[2] == 3}" v-on:click="adminconfig(3)">Thu</span>
        <span class="btn border" v-bind:class="{ 'btn-success': XuanHaThuDong[3] == 4}" v-on:click="adminconfig(4)">Đông</span>
    </div>

    <div class="container row mt-5">
        <div class="col-12 text-center">
            <p class="text-danger">Phiên hiện tại</p>
        </div>
        <div class="col-12 text-center">
            <p class="btn btn-warning">{{countDown}}</p>
        </div>
        <div class="col-12 text-center">
            <p class="text-success">Kết quả</p>
        </div>

        <div class="col-12 text-center">
            <p class="btn" v-bind:class="{ 'btn-success': XuanHaThuDong[0] == 1}">Xuân</p>
            <p class="btn" v-bind:class="{ 'btn-success': XuanHaThuDong[1] == 2}">Hạ</p>
            <p class="btn" v-bind:class="{ 'btn-success': XuanHaThuDong[2] == 3}">Thu</p>
            <p class="btn" v-bind:class="{ 'btn-success': XuanHaThuDong[3] == 4}">Đông</p>
        </div>
    </div>


    <div class="container">
        <table class="table table-striped" id="tableBrand">
            <thead class="bg-gradient-warning text-primary">
                <tr>
                    <th class="text-center">STT</th>
                    <th class="text-center">Phiên</th>
                    <th class="text-center">Kết quả</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item, index) in data" :key=index>
                    <th class="text-center">{{index+1}}</th>
                    <th class="text-center">{{item.wave}}</th>
                    <th class="text-center">{{item.item1}} {{item.item2}}</th>
                </tr>
            </tbody>
        </table>
    </div>

</div>


<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript">


    var AppVueGame = new Vue({
        el: "#AppVueGame",
        data: {
            data: [],
            connectionHub: null,
            countDown: 60,
            XuanHaThuDong: [0, 0, 0, 0],
            adminconfig1: false,
            item1: 0,
            item2: 0
        },
        computed: {

        },
        mounted() {
            var connection = new signalR.HubConnectionBuilder().withUrl("/gameHub").build();
            connection.start().then(() => {
                console.log("Kết nối thành công")
                this.calldata();
            }).catch(function (err) {
                console.log("err: ", err)
            });
            this.connectionHub = connection;
            this.Init();
        },
        methods: {
            Init() {
                fetch("/Game/getHistory")
                    .then(res => res.json())
                    .then(data => {
                        this.data = data.data.reverse()
                    })
            },
            async startCountdown() {
                await this.connectionHub.invoke("CountDownUpDate", this.countDown--)
            },
            calldata() {
                //lấy 2 số ngẫu nhiên
                let item = this.getRandomNumbers()

                let item1 = item[0];
                let item2 = item[1];

                this.adminconfig(item1);
                this.adminconfig(item2);

                let a = setInterval(() => {
                    if (this.countDown > 0) {
                        this.startCountdown();
                    }
                    else {
                        clearInterval(a);
                        this.connectionHub.invoke("CountDownFinish", item1, item2);
                        this.Init();
                        this.countDown = 60;
                        this.adminconfig1 = false;
                        this.reset();
                        this.calldata();
                    }
                }, 1000);
            },
            getRandomNumbers() {
                let list = [1, 2, 3, 4];
                let count = 2;
                const shuffledList = list.slice().sort(() => 0.5 - Math.random());
                return shuffledList.slice(0, count);
            },
            getRandomNumberBetween(min, max) {
                return Math.floor(Math.random() * (max - min + 1)) + min;
            },
            adminconfig(rs) {
                switch (rs) {
                    case 1:
                        if (this.XuanHaThuDong[0] == 0) {
                            this.XuanHaThuDong[0] = 1
                        }else{
                            this.XuanHaThuDong[0] = 0
                        }
                        break;
                    case 2:
                        if (this.XuanHaThuDong[1] == 0) {
                            this.XuanHaThuDong[1] = 2
                        } else {
                            this.XuanHaThuDong[0] = 0
                        }
                        break;
                    case 3:
                        if (this.XuanHaThuDong[2] == 0) {
                            this.XuanHaThuDong[2] = 3
                        } else {
                            this.XuanHaThuDong[0] = 0
                        }
                        break;
                    case 4:
                        if (this.XuanHaThuDong[3] == 0) {
                            this.XuanHaThuDong[3] = 4
                        } else {
                            this.XuanHaThuDong[0] = 0
                        }
                        break;
                    default:
                        break;
                }
            },
            reset(){
                this.XuanHaThuDong[0] = 0;
                this.XuanHaThuDong[1] = 0;
                this.XuanHaThuDong[2] = 0;
                this.XuanHaThuDong[3] = 0;
            }


        }
    });
</script>